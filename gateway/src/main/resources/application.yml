server:
  port: 8080

spring:
  application:
    name: gateway
  cloud:
    gateway:
      routes:
  #这个路由规则会在东8区的2018-12-25 14:33:47后，将请求都转跳到google。
  #      - id: after_route
        #        uri: https://baidu.com
        #         predicates:
        #           - After=2018-12-25T14:33:47.789+08:00
#======================================================
        #第一组网关路由配置，针对于服务user-service
        - id: userservice # 路由id，自定义，只要唯一即可
          uri: lb://user # 路由的目标地址。lb就是负载均衡，后面跟服务名称。
          predicates: # 路由断言。也就是判断请求是否符合路由规则的条件。predicates译为谓语、断言
            - Path=/user/** # 路径断言。这个是按照路径匹配，只要以/user/开头就符合要求
        #之后访问http://localhost:10010/user/1就路由（转发）到lb://userservice/1，注册拉取并负载均衡后为http://localhost:8081
        - id: jobservice # 路由id，自定义，只要唯一即可
          uri: lb://job # 路由的目标地址。lb就是负载均衡，后面跟服务名称。
          predicates: # 路由断言。也就是判断请求是否符合路由规则的条件。predicates译为谓语、断言
            - Path=/job/** # 路径断言。这个是按照路径匹配，只要以/user/开头就符合要求
        - id: oschina # 路由的编号r
          uri: https://www.oschina.net # 路由的目标地址
          predicates: # 断言，作为路由的匹配条件，对应 RouteDefinition 数组
            - Path=/oschina
          filters: # 过滤器，对请求进行拦截，实现自定义的功能，对应 FilterDefinition 数组
            - StripPrefix=1
        # 与 Spring Cloud 注册中心的集成，对应 DiscoveryLocatorProperties 类
          discovery:
            locator:
              enabled: true # 是否开启，默认为 false 关闭
              url-expression: "'lb://' + serviceId" # 路由的目标地址的表达式，默认为 "'lb://' + serviceId"